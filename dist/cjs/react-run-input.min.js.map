{"version":3,"file":"react-run-input.min.js","sources":["../../src/utils/keyboard-events.js","../../src/utils/run.js","../../src/components/RUNInput/RUNInput.jsx"],"sourcesContent":["/**\n * @param {KeyboardEvent} event\n * @returns {boolean}\n */\nexport function isControlKey(event) {\n    const KEYS = [\n        8,  // Backspace\n        9,  // Tab\n        17, // Control\n        35, // End\n        36, // Home\n        37, // ArrowLeft\n        38, // ArrowUp\n        39, // ArrowRight\n        40, // ArrowDown\n        46, // Delete\n        91  // Command (for macOS)\n    ];\n\n    return KEYS.includes(event.keyCode);\n}\n\n/**\n * @param {KeyboardEvent} event\n * @returns {boolean}\n */\nexport function isCtrlOrCmdKey(event) {\n    const KEYS = [\n        17, // Control\n        91  // Command (for macOS)\n    ];\n\n    return KEYS.includes(event.keyCode);\n}\n\n/**\n * @param {KeyboardEvent} event\n * @returns {boolean}\n */\nexport function isEditKey(event) {\n    const KEYS = [\n        67, // C\n        86, // V\n        88  // X\n    ];\n\n    return KEYS.includes(event.keyCode);\n}\n","/**\n * @param {string} run\n * @returns {{dv: string, numRUN: string}}\n */\nexport function cleanAndSplitRUN(run) {\n    let cleanRUN = run?.replace(/[\\.\\-]/g, ''),\n        numRUN = '',\n        dv = '';\n\n    if (cleanRUN?.length === 1) {\n        numRUN = cleanRUN;\n    } else if (cleanRUN?.length > 1) {\n        numRUN = cleanRUN.slice(0, -1);\n        dv = cleanRUN.slice(-1).toUpperCase();\n    }\n\n    return { numRUN, dv };\n}\n\n/**\n * @param {string} run\n * @returns {string}\n */\nexport function cleanRUN(run) {\n    const { numRUN, dv } = cleanAndSplitRUN(run);\n    return numRUN + dv;\n}\n\n/**\n * @param {string} run\n * @returns {boolean}\n */\nexport function checkRUN(run) {\n    const isNumber = /^\\d+$/;\n    const { numRUN, dv } = cleanAndSplitRUN(run);\n\n    if (!(numRUN && dv && isNumber.test(numRUN))) return false;\n\n    let calculation = 0,\n        series = 2,\n        validDV;\n\n    for (let i = numRUN.length - 1; i >= 0; i--) {\n        if (series > 7) series = 2;\n        calculation += (series * numRUN.charAt(i));\n        series++;\n    }\n\n    calculation = 11 - (calculation % 11);\n\n    if (calculation === 10) {\n        validDV = 'K';\n    } else if (calculation === 11) {\n        validDV = '0';\n    } else {\n        validDV = calculation.toString();\n    }\n\n    return dv === validDV;\n}\n\n/**\n * @param {string} run\n * @returns {string}\n */\nexport function formatRUN(run) {\n    let { numRUN, dv } = cleanAndSplitRUN(run);\n    let formattedRUN = '';\n\n    while (numRUN.length > 3) {\n        formattedRUN = '.' + numRUN.slice(numRUN.length - 3) + formattedRUN;\n        numRUN = numRUN.slice(0, numRUN.length - 3);\n    }\n\n    formattedRUN = numRUN + formattedRUN;\n\n    return (dv) ? `${formattedRUN}-${dv}` : formattedRUN;\n}\n","import React, { useState } from 'react';\nimport {\n    isControlKey,\n    isCtrlOrCmdKey,\n    isEditKey,\n    cleanRUN,\n    formatRUN\n} from '../../utils';\n\nfunction RUNInput(props) {\n    const { value: externalValue, handleChangeValue, ...DOMProps } = props;\n    const [ctrlDown, setCtrlDown] = useState(false);\n    const [localValue, setLocalValue] = useState('' || externalValue);\n\n    const handleInput = (event) => {\n        const run = cleanRUN(event.target.value);\n\n        setLocalValue(run);\n\n        if (handleChangeValue) {\n            handleChangeValue(run);\n        }\n    };\n\n    const handleKeyDown = (event) => {\n        const keyFilter = /[\\dK]/;\n\n        if (isCtrlOrCmdKey(event)) {\n            setCtrlDown(true);\n        }\n\n        if (!(\n            keyFilter.test(event.key.toUpperCase()) ||\n            isControlKey(event) ||\n            ctrlDown && isEditKey(event)\n        )) {\n            event.preventDefault();\n        }\n    };\n\n    const handleKeyUp = (event) => {\n        if (isCtrlOrCmdKey(event)) {\n            setCtrlDown(false);\n        }\n    };\n\n    return (\n        <input {...DOMProps}\n            type=\"text\"\n            maxLength=\"12\"\n            value={formatRUN(localValue)}\n            onInput={handleInput}\n            onKeyDown={handleKeyDown}\n            onKeyUp={handleKeyUp}\n        />\n    );\n}\n\nexport default RUNInput;\n"],"names":["isCtrlOrCmdKey","event","includes","keyCode","cleanAndSplitRUN","run","cleanRUN","replace","numRUN","dv","length","slice","toUpperCase","formatRUN","formattedRUN","props","value","externalValue","handleChangeValue","DOMProps","ctrlDown","setCtrlDown","useState","localValue","setLocalValue","React","type","maxLength","onInput","target","onKeyDown","test","key","isControlKey","isEditKey","preventDefault","onKeyUp","validDV","calculation","series","i","charAt","toString"],"mappings":"wQA0BO,SAASA,EAAeC,GAM3B,MALa,CACT,GACA,IAGQC,SAASD,EAAME,QAC/B,CC7BO,SAASC,EAAiBC,GAC7B,IAAIC,EAAWD,GAAKE,QAAQ,UAAW,IACnCC,EAAS,GACTC,EAAK,GAST,OAPyB,IAArBH,GAAUI,OACVF,EAASF,EACFA,GAAUI,OAAS,IAC1BF,EAASF,EAASK,MAAM,GAAI,GAC5BF,EAAKH,EAASK,OAAO,GAAGC,eAGrB,CAAEJ,SAAQC,KACrB,CAMO,SAASH,EAASD,GACrB,MAAMG,OAAEA,EAAMC,GAAEA,GAAOL,EAAiBC,GACxC,OAAOG,EAASC,CACpB,CAuCO,SAASI,EAAUR,GACtB,IAAIG,OAAEA,EAAMC,GAAEA,GAAOL,EAAiBC,GAClCS,EAAe,GAEnB,KAAON,EAAOE,OAAS,GACnBI,EAAe,IAAMN,EAAOG,MAAMH,EAAOE,OAAS,GAAKI,EACvDN,EAASA,EAAOG,MAAM,EAAGH,EAAOE,OAAS,GAK7C,OAFAI,EAAeN,EAASM,EAEhBL,EAAO,GAAEK,KAAgBL,IAAOK,CAC5C,kBCpEA,SAAkBC,GACd,MAAQC,MAAOC,EAAaC,kBAAEA,KAAsBC,GAAaJ,GAC1DK,EAAUC,GAAeC,EAAQA,UAAC,IAClCC,EAAYC,GAAiBF,EAAQA,SAAOL,GAkCnD,OACIQ,6BAAWN,EAAQ,CACfO,KAAK,OACLC,UAAU,KACVX,MAAOH,EAAUU,GACjBK,QArCa3B,IACjB,MAAMI,EAAMC,EAASL,EAAM4B,OAAOb,OAElCQ,EAAcnB,GAEVa,GACAA,EAAkBb,EACtB,EA+BIyB,UA5Be7B,IAGfD,EAAeC,IACfoB,GAAY,GAHE,QAOJU,KAAK9B,EAAM+B,IAAIpB,gBF5B9B,SAAsBX,GAezB,MAda,CACT,EACA,EACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,IAGQC,SAASD,EAAME,QAC/B,CEaY8B,CAAahC,IACbmB,GFKL,SAAmBnB,GAOtB,MANa,CACT,GACA,GACA,IAGQC,SAASD,EAAME,QAC/B,CEbwB+B,CAAUjC,IAEtBA,EAAMkC,gBACV,EAgBIC,QAbanC,IACbD,EAAeC,IACfoB,GAAY,EAChB,IAaR,mBDxBO,SAAkBhB,GACrB,MACMG,OAAEA,EAAMC,GAAEA,GAAOL,EAAiBC,GAExC,KAAMG,GAAUC,GAHC,QAGcsB,KAAKvB,IAAU,OAAO,EAErD,IAEI6B,EAFAC,EAAc,EACdC,EAAS,EAGb,IAAK,IAAIC,EAAIhC,EAAOE,OAAS,EAAG8B,GAAK,EAAGA,IAChCD,EAAS,IAAGA,EAAS,GACzBD,GAAgBC,EAAS/B,EAAOiC,OAAOD,GACvCD,IAaJ,OAVAD,EAAc,GAAMA,EAAc,GAG9BD,EADgB,KAAhBC,EACU,IACa,KAAhBA,EACG,IAEAA,EAAYI,WAGnBjC,IAAO4B,CAClB"}